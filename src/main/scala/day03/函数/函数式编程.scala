package day03.函数
/*  异常区分：
   编译期异常：
   运行期异常：一般都是程序的错误(Bug)
   */
object 函数式编程 {
  //     函数和方法的区别：
  //         函数：功能的封装（不考虑函数，只考虑功能），不从属于对象
  //               相当于java中的静态方法，跟对象无关,仅仅是为了共通功能的封装，所以不存在重写和重载的概念。
  //         方法：在类中声明的方法，和对象相关，类似java中的成员方法。考虑对象的归属。
  def main(args: Array[String]): Unit = {
     //TODO  scala是完全面向函数的编程语言
     // TODO 这里的函数类似于java中的静态方法，体现的是功能的封装

    //TODO 1.scala函数的基本声明
    //scala中没有public的概念，也没有静态的概念，所以为了和属性分开，使用def关键字声明，说是函数。
    // scala 中返回值类型需要放置在方法名的后面，使用冒号：分隔
    // scala中 参数列表的声明和java一致，但是参数声明有变化：参数名1：参数类型1 ...
    // scala中 没有throws 关键字，所以根本不需要抛出异常
    // = 不能省略，明确说明 函数是有返回值的。

    //scala中函数的最基本声明 方式
    def test(name:String ,age:Int):String  = {
       return "name:"+name +" age:"+age ;
    }
    var nameAge = test("张三",10) ;
    println(nameAge)

    //声明1 - 无参、无返回值

    //声明2 - 有1参、无返回值
    //声明3 - 有多参、无返回值
    // ==============================返回值类型的扩展=========================================
    //声明4 - 无参、有返回值
    def f1():String ={
      return "zhangsan" ;
    }
    // TODO 如果使用return ，那么方法必须声明 返回值类型
    // TODO 如果不使用return,方法声明可以省略返回值类型，会自动给你推断出来。
    // TODO 方法可以自动推断方法返回值类型，根据方法体逻辑中最后的一行代码的结果。
    // TODO 如果函数明确了返回值为Unit，那么return 不起作用，返回值仍为 Unit.
    def f2()={
     // return "zhangsan" ;
       "zhangsan" ;
    }
    println("f2="+f2())
    //TODO 把等号去掉，不加Unit也能达到 声明这个方法没有返回值的效果。即失去了自动推断功能。
    // TODO  如果明确方法没有返回值，也不希望自动推断，那么可以省略 = 等号
    def f3(){
      // return "zhangsan" ;
      "zhangsan" ;
    }
    println("f3="+f3())
    //TODO 省略参数列表
    // 如果函数没有参数列表，那么参数的小括号可以省略，并且调用时候，不需要使用小括号。
    def f6={
      "省略参数列表"
     }
    println("f6="+f6)
    //TODO 省略参数列表
    // 如果方法体的逻辑代码只有一行，那么花括号可以省略，为了区分方法名和方法体，需要使用等号连接。
    def f7="省略参数列表"
    println("f7="+f7)
    //  TODO 匿名函数 lamada 表达式，不关心名字，只关心函数体的实现。
    ()->"省略参数列表"
    //声明5 - 有参、有返回值
    // ===========================参数的扩展============================================
    // TODO 在参数类型的后面增加星号，表示可变参数,切只能放置在参数列表的后面
    def d1(name :String*)= println("name="+name)
    d1("张三","李四")
    def d2(age:Int ,name :String*)= println("age="+age +" name="+name)
    d2(20,"张三","李四")
    d2(20)

    //TODO 增加参数的默认值
    def d3(age:Int = 20 ,name:String ="张三")=println("age="+age+" name="+name )
    d3()
    d3(name="李四")  //TODO 带名参数

    // ===========================函数式编程-超级操作============================================

  }
}
